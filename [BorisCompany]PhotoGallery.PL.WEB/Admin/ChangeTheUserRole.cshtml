@using _BorisCompany_PhotoGallery.Interfaces.BLL;
@using _BorisCompany_PhotoGallery.BLL.PhotoLogic;
@if (!User.Identity.IsAuthenticated)
{
    Response.SetStatus(HttpStatusCode.Unauthorized);
    return;
}
@if (!User.IsInRole("admin"))
{
    Response.SetStatus(HttpStatusCode.Forbidden);
    return;
}
@if (IsPost)
{
    IUserBLL userLogic = new UserLogic();

    int role = int.Parse(Request["role"]);
    string login = Request["login"];
    userLogic.ChangeRole(login, role);

    Response.Redirect("~/Admin/Users");
    return;
}
else
{
    Page.Title = "Change user's role";
    IUserBLL rlogic = new UserLogic();
    IRoleBLL rolee = new RoleLogic();

    var user = rlogic.GetUser(Request["login"]);
    <div class="element-position element-style">
        <div class="row row-position">
            <form action="~/Admin/ChangeTheUserRole" method="post" role="form" class="text-color form-horizontal center-block">
                <div class="form-group">
                    <div class="col-sm-3">
                        <label class="control-label " for="role">Old user's role: @rolee.GetRole(user.Role).Name</label>
                                <select class="form-control" name="role" id="role">
                                    @foreach (var item in rolee.GetAll())
                                    {
                                        if (rolee.GetRole(user.Role).Name != item.Name)
                                        {
                                            <option value="@item.Id">@item.Name</option>
                                        }
                                    }
                                </select>
                    </div>
                    <div class="col-sm-3">
                        <input type="hidden" id="login" name="login" value="@Request["login"]">
                        <button type="submit" class="btn btn-default">Submit</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

}


